name: Android CI

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev
      - qa

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        android:
          - { version: '29', arch: "x86_64" }
          - { version: '30', arch: "x86_64" }
          - { version: '34', arch: "x86_64" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'  # Keep your Flutter version here

      - name: Install dependencies
        run: flutter pub get
        working-directory: news_app

      - name: Run unit tests
        run: flutter test
        working-directory: news_app

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Create AVD and start emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.android.version }}
          arch: ${{ matrix.android.arch }}
          target: 'google_apis'
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: flutter drive --driver=news_app/test_driver/main_test.dart --target=news_app/integration_test/app_test.dart --verbose

  #   runs-on: macos-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.22.3'

  #     - name: Install dependencies
  #       run: flutter pub get
  #       working-directory: news_app

  #     - name: Set up Xcode
  #       run: |
  #         sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
  #         sudo xcodebuild -runFirstLaunch
  #       working-directory: news_app

  #     - name: Set up iOS simulator
  #       uses: futureware-tech/simulator-action@v3
  #       with:
  #         model: 'iPhone 15 Pro'  # Assuming iPhone 15 Pro is the latest model
  #         version: '17.0'  # Assuming iOS 17.0 is the latest version

  #     - name: Build iOS
  #       run: flutter build ios --no-codesign
  #       working-directory: news_app

  #     - name: Run unit and widget tests
  #       run: flutter test
  #       working-directory: news_app

  #     - name: Run integration tests on iOS
  #       run: flutter drive --target=integration_test/app_test.dart -d "iPhone 15 Pro"
  #       working-directory: news_app
